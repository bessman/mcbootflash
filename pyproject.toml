[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "mcbootflash"
authors = [{name = "Alexander Bessman", email = "alexander.bessman@gmail.com"}]
dynamic = ["version", "description"]
readme = "README.md"
requires-python = ">=3.7"
license = {file = "LICENSE"}
dependencies = [
    "pyserial",
    "intelhex",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
]
keywords = [
    "firmware",
    "flashing",
    "bootloader",
    "serial",
    "uart",
    "microchip",
    "pic24",
    "dspic33",
    "16-bit",
]

[project.urls]
Home = "https://github.com/bessman/mcbootflash"

[project.scripts]
mcbootflash = "mcbootflash.__main__:main"

[project.optional-dependencies]
doc = [
  "sphinx",
  "sphinx_mdinclude",
  "sphinx_rtd_theme",
]
progressbar = ["progressbar2"]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist =
    isort
    black
    prospector
    pydocstyle
    test
    progressbar
    docs
    report

[testenv:isort]
deps = isort
commands = isort --check-only .

[testenv:black]
deps = black
commands = black --check .

[testenv:prospector]
deps =
    prospector
    mypy
    bandit
commands = prospector .

[testenv:pydocstyle]
deps = pydocstyle
commands = pydocstyle --convention=numpy src/

[testenv:test]
usedevelop = True
deps =
    pytest
    coverage
    pytest-reserial >= 0.2.4
commands = coverage run --parallel-mode -m pytest --replay

[testenv:progressbar]
usedevelop = True
deps =
    pytest
    coverage
    pytest-reserial >= 0.2.4
    progressbar2
commands = coverage run --parallel-mode -m pytest -k test_flash --replay

[testenv:report]
deps = coverage
commands =
    coverage combine
    coverage report
depends = test

[testenv:xml]
deps = coverage
commands =
    coverage combine
    coverage xml
depends = test

[testenv:docs]
deps =
    sphinx
    sphinx_rtd_theme
    sphinx_mdinclude
commands = sphinx-build -W -a docs/source docs/build

[gh-actions]
python =
    3.7: test
    3.8: test
    3.9: test
    3.10: test
    3.11: black, prospector, test, report
"""

[tool.isort]
profile = "black"

[tool.bandit]
skips = ["B101"]
